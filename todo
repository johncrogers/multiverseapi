A user should be able to:
   ✔ Go to a deployed website (e.g. "johnsapp.herokuapp.com") @done(18-05-07 13:03)
  On the deployed website:
    If the user is already logged in, they should be able to:
      ☐ See their collection of saved cards
      ☐ Filter all cards cards by edition
      ☐ Page through cards per edition
      ☐ Add cards to their collection and save their new collection
    If the user is not logged in, they should be prompted and able to:
      ☐ Create an account and sign in
      ☐ Sign in with an existing account

CLIENT:
  Components:
    ☐ App
    ☐ Nav
    ☐ Search
      ☐ FormatSelectorView
        ☐ Collections
        ☐ Editions
          ☐ Block
            ☐ Edition
        ☐ Standard
        ☐ Modern
      ☐ ResultsView
        ☐ ResultsViewHeader
          ☐ Header
          ☐ HeaderHider
        ☐ ResultsViewBody
          ☐ ResultsListView
            ☐ ResultsListItem
          ☐ PageSelector
      ☐ FiltersView
        ☐ FilterHeader
        ☐ FiltersList
          ☐ FiltersListItem
      ☐ SelectionView
        ☐ SelectionHeader
        ☐ SelectionListView
          ☐ SelectedListItem
  State:
    ☐ Data:
      ☐ collectionCards = [{card}]
      ☐ filterResults = [{card}]
      ☐ filters = {field: query}
      ☐ collectionIds = {collectionName: collectionId}
      ☐ selection = [{card}]
    ☐ Function bindings:
      ☐ applyFilters
      ☐ retrieveCollection
      ☐ retrieveCollectionIds
      ☐ selectCard
      ☐ deselectCard
      ☐ addFilter
      ☐ removeFilter
  Functions:
    ☐ applyFilters()
      Applies current filter configuration to collectionData, then calls setState on filterResults.
    ☐ retrieveCollection(collectionId)
      Performs AJAX request to /api/editions/editionId.
    ☐ retrieveCollectionIds()
      Performs AJAX request to /api/editions.
    ☐ selectCard(multiverseId)
      Adds the card data per multiverseId the selection, then sets it's state.
    ☐ deselectCard(multiverseId)
      Removes the card data per multiverseId from selected, then sets it's state.
    ☐ addFilter({field: query})
      Adds filter to filters, then sets it's state.
    ☐ removeFilter()
      Removes filter from filters, then sets it's state.
    signin
    signup
    logout
  AJAX:
    Editions:
      ☐ GET /editions
      ☐ GET /editions/-
      ☐ GET /editions/-/cards
    Collections:
      ☐ POST /collections
      ☐ GET /collections
      ☐ GET /collections/-
      ☐ GET /collections/-/cards
      signin
      signup
      logout
  Props:
    ☐ Data
    ☐ Functions
  Functionality:
    ☐ Modify
    ☐ Layout
    ☐ AJAX
    ☐ Design

SERVER:
  http://pm2.keymetrics.io/
  Endpoints:
    Editions:
      ☐ GET /editions
      ☐ GET /editions/-
      ☐ GET /editions/-/cards
    Collections:
      ☐ POST /collections
      ☐ GET /collections
      ☐ GET /collections/-
      ☐ GET /collections/-/cards
    Users
      signin
      signup
      logout

DATABASE:
  ✔ Connection @done(18-05-05 17:54)
  ✔ Build schemas: @done(18-05-07 19:27)
    ✔ Users @done(18-05-07 19:27)
    ✔ users_collections @done(18-05-07 19:27)
    ✔ Collections @done(18-05-07 19:27)
    ✔ cards_collections @done(18-05-07 19:27)
    ✔ Cards @done(18-05-07 19:10)
  ✔ Data: @done(18-05-07 20:56)
    ✔ Convert Data @done(18-05-07 20:56)
    ✔ Populate DB. @done(18-05-07 20:56)
  ☐ MODELS:
    ✔ Cards: @done(18-05-07 21:57)
      ☐ retrieveEditions
        {editionName: editionCode}
      ☐ retrieveEdition
        {edition details}
      ☐ retrieveEditionCards
        [{card}]
    ☐ Collections:
      ☐ saveCollection
        insert({collectionDetails})
        insert([{cards_collections}])
      ☐ retrieveUserCollectionIds
        [["collectionName", "collectionId"]]
      ☐ retrieveCollection
        {collection details}
      ☐ retrieveCollectionCards
        [{card}]
    ☐ USER:
      ☐ signin
      ☐ signup
      ☐ logout